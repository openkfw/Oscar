name: Oscar's Github CI

on:
  release:
    types: [published]
  push:
    branches:
      - github-actions
    tags:
      - '*'  

jobs:
  # Security jobs
  # security-frontend:
  #   name: Check code security of frontend
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout this Github repository
  #       uses: actions/checkout@v2
  #     - name: Set up and use Node 14
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '14'
  #     - run: |
  #         cd frontend 
  #         yarn --frozen-lockfile
  #         yarn audit
  #         yarn lint:ci
  # security-api:
  #   name: Check code security of api 
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout this Github repository 
  #       uses: actions/checkout@v2 
  #     - name: Set up and use Node 14 
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '14'
  #     - run: |
  #         cd api
  #         yarn --frozen-lockfile
  #         yarn audit
  #         yarn lint:ci 
  # security-initial-data-load:
  #   name: Check code security of initial-data-load
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout this Github repository 
  #       uses: actions/checkout@v2 
  #     - name: Set up and use Node 14 
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '14'
  #     - run: |
  #         cd initial-data-load
  #         yarn --frozen-lockfile
  #         yarn audit
  #         yarn lint:ci 
  # Test jobs
  # test-api:
  #   name: Test the API
  #   runs-on: ubuntu-20.04
  #   services: 
  #     mongodb:
  #       image: mongo 
  #       ports:
  #       - 27917:27017
  #   steps:
  #     - name: Checkout this Github repository 
  #       uses: actions/checkout@v2
  #     - name: Set up and use Node 14
  #       uses: actions/setup-node@v2
  #       with: 
  #         node-version: '14'
  #     - name: Steps for the test-api job 
  #       env:
  #         MONGODB_HOST: localhost 
  #         MONGODB_PORT: ${{ job.services.mongodb.ports[27017] }}
  #         MONGO_URI: mongodb://localhost:27917/oscar
  #         NODE_ENV: test
  #         AZURE_STORAGE_CONNECTION_STRING:  DefaultEndpointsProtocol=https;AccountName=test;AccountKey=test;EndpointSuffix=test
  #       run: |
  #         cd api
  #         yarn --frozen-lockfile
  #         yarn test:coverage 
  # test-initial-data-load:
  #   name: Test the initial-data-load
  #   runs-on: ubuntu-20.04
  #   services: 
  #     mongodb:
  #       image: mongo 
  #       ports:
  #       - 27917:27017
  #   steps:
  #     - name: Checkout this Github repository 
  #       uses: actions/checkout@v2
  #     - name: Set up and use Node 14
  #       uses: actions/setup-node@v2
  #       with: 
  #         node-version: '14'
  #     - name: Steps for the test-initial-data-load job 
  #       env:
  #         MONGODB_HOST: localhost 
  #         MONGODB_PORT: ${{ job.services.mongodb.ports[27017] }}
  #         MONGO_URI: mongodb://localhost:27917/oscar
  #         NODE_ENV: test
  #         AZURE_STORAGE_CONNECTION_STRING:  DefaultEndpointsProtocol=https;AccountName=test;AccountKey=test;EndpointSuffix=test
  #       run: |
  #         cd initial-data-load
  #         yarn --frozen-lockfile
  #         yarn test:coverage 
  # Build jobs
  build-frontend:
    name: Build the frontend 
    runs-on: ubuntu-20.04
    steps:
      - name: Extract branch name for naming the Docker image tag
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Checkout this Github repository 
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Display branch name 
        run: echo ${{ steps.extract_branch.outputs.branch }}
      - name: Docker build and push to Docker Hub 
        id: docker_build
        uses: docker/build-push-action@v2
        with: 
          context: ./frontend
          push: true 
          tags: oscarplatform/frontend:${{ steps.extract_branch.outputs.branch }}
    