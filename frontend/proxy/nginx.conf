proxy_cache_path /tmp/cache levels=1:2 keys_zone=locations:10m max_size=1g inactive=60d use_temp_path=off;

server_tokens off;

server {
    # security headers
    # guard against clickJacking attack
    add_header X-Frame-Options "DENY" always;
    # guard against cross site scripting
    add_header X-XSS-Protection "1; mode=block" always;
    # guard against content-type sniffing
    add_header X-Content-Type-Options "nosniff" always;
    # force HTTP to HTTPS
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains" always;
    # hide the headers from backend servers (avoid duplicity)
    proxy_hide_header X-Frame-Options;
    proxy_hide_header X-XSS-Protection;
    proxy_hide_header X-Content-Type-Options;
    proxy_hide_header Strict-Transport-Security;
    proxy_hide_header X-Powered-By;
    proxy_hide_header X-AspNetMvc-Version;
    proxy_hide_header X-AspNet-Version;

    listen       80;
    server_name  localhost;
    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    # whitelist HTTP methods
    if ( $request_method !~ ^(GET)$) {
      return 405;
    }

    location = /health-check {
        auth_basic    off;
        root          /usr/share/nginx/html;
    }

    # AZURE map tiles
    location ^~ /MAP {
      # Configures cache
      add_header X-Cache-Status $upstream_cache_status;
      proxy_ignore_headers Cache-Control;
      proxy_cache_valid 60d;
      proxy_cache locations;

      set $args &subscription-key=${AZURE_MAPS_CONNECTION_STRING}&api-version=2.0$args;
      proxy_pass https://atlas.microsoft.com/map/tile;
      proxy_ssl_server_name on;
    }

    # AZURE map tiles
    location ^~ /SEARCH {
      # Configures cache
      add_header X-Cache-Status $upstream_cache_status;
      proxy_ignore_headers Cache-Control;
      proxy_cache_valid 60d;
      proxy_cache locations;

      set $args &subscription-key=${AZURE_MAPS_CONNECTION_STRING}&api-version=1.0&limit=6&ofs=0&$args;
      proxy_pass https://atlas.microsoft.com/search/address/json;
      proxy_ssl_server_name on;
    }

    # URL without authentication, but requiring the header in the backend
    location ^~ /api/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_pass http://api-service:8080;
    }

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri /index.html;
        expires 1M;
        add_header Cache-Control "public";
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;

    # allow big documents to be hashed
    client_max_body_size 100M;

    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}
